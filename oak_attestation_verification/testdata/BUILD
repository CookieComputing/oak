#
# Copyright 2022 The Project Oak Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

package(
    default_visibility = ["//:internal"],
    licenses = ["notice"],
)

filegroup(
    name = "cb_attestation",
    srcs = [
        "cb_endorsements.binarypb",
        "cb_evidence.binarypb",
        "cb_evidence_software_rooted.binarypb",
        "cb_reference_values.binarypb",
    ],
)

filegroup(
    name = "certs",
    srcs = [
        # The VCEK cert needs to match the hardware ID of the attestation report in the
        # test evidence proto. The additional parameters in the URL encode the reported
        # TCB version in the attestation report.
        #
        # URL for downloading the VCEK cert:
        # https://kdsintf.amd.com/vcek/v1/Milan/cd3c4e6b5b64026ac135d76f888ea6bcc1351ec610d64b0af4028422b84c17ad2571905acfe2eb2181c119df4241e94a926d1b06c02e82845416202151212fdd?ucodeSPL=168&snpSPL=8&teeSPL=0&blSPL=3
        # ARPT reported TCB version: ucodeSPL=168&snpSPL=8&teeSPL=0&blSPL=3
        # ARPT current  TCB version: ucodeSPL=209&snpSPL=14&teeSPL=0&blSPL=3
        "oc_vcek_milan.der",
        "oc_vcek_milan.pem",
        "rk_vcek_milan.der",
        "vcek_genoa.der",
    ],
)

# A valid recent Transparent Release endorsement bundle.
filegroup(
    name = "endorsement",
    srcs = [
        "endorsement.json",
        "endorsement.json.sig",
        "logentry.json",
        "endorser_public_key.pem",  # tr_development_verifying_key
        # Public key of the Rekor instance hosted by sigstore.dev. It is downloaded
        # from https://rekor.sigstore.dev/api/v1/log/publicKey.
        "rekor_public_key.pem",
    ],
)

filegroup(
    name = "fake_attestation",
    srcs = [
        "fake_evidence.binarypb",
        # Generated by running verification on the fake evidence.
        "fake_expected_values.binarypb",
    ],
)

# Attestation for an Oak Containers stack running on AMD Genoa platform.
# The endorsements are generated during the test.
filegroup(
    name = "genoa_oc_attestation",
    srcs = [
        "genoa_oc_evidence.binarypb",
        "genoa_oc_reference_values.binarypb",
    ],
)

# A recent attestation triple for an Oak Containers stack.
filegroup(
    name = "oc_attestation",
    srcs = [
        "oc_endorsements_20241205.binarypb",
        "oc_evidence_20241205.binarypb",
        "oc_reference_values_20241205.binarypb",
    ],
)

# Legacy Oak Containers evidence. Endorsements and reference values are
# created during the test.
filegroup(
    name = "oc_attestation_legacy",
    srcs = [
        "oc_evidence.binarypb",
    ],
)

# Example attestation evidence on Intel TDX for the Oak Containers stack.
filegroup(
    name = "oc_attestation_tdx",
    srcs = [
        "oc_evidence_tdx.binarypb",
    ],
)

# A recent attestation triple for an Restricted Kernel stack.
filegroup(
    name = "rk_attestation",
    srcs = [
        "rk_endorsements_20241205.binarypb",
        "rk_evidence_20241205.binarypb",
        "rk_reference_values_20241205.binarypb",
    ],
)

# Legacy Restricted Kernel evidences. Endorsements and reference values are
# created during the test.
filegroup(
    name = "rk_attestation_legacy",
    srcs = [
        "rk_evidence.binarypb",
        "rk_evidence_20240312.binarypb",
    ],
)

#!/usr/bin/env bash
#
# bazel-clippy without all the noise
set -o errexit
set -o nounset
set -o pipefail

# Command to run bazel clippy
readonly COMMAND="bazel build --keep_going --config=unsafe-fast-presubmit --config=clippy //...:all -- -third_party/..."

# Run the command and filter the output
$COMMAND 2>&1 | awk '
BEGIN {
    line_count = 0
    print "   /‾‾\\"
    print "   ▏  ▕"
    print "  (o) (o)"
    print "   ▏▏ ▕ /"
    print "   ▏▏ ▕▕"
    print "   ▏\\_/▕"
    print "   \\___/"
    print "     /\\"
    print "/‾‾‾‾  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾\\"
}
{
    # Filter out lines starting with "Aspect @rules_rust//rust/private:clippy"
    if ($0 ~ /^Aspect @rules_rust\/\/rust\/private:clippy.*$/) next

    # Filter out lines indicating successful clippy checks
    if ($0 ~ /^ *bazel-.*\.clippy\.ok$/) next

    # Filter out INFO lines
    if ($0 ~ /^\([0-9:]+\) INFO:/) next

    # Print any other lines that dont match the above patterns
    print $0
    line_count++
}
END {
    if (line_count == 0) {
        print " no issues found, have a wonderful day."
    }
    print "\\________________________________________________________/"
}
'
